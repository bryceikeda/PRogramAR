//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.TaskPlanner
{
    [Serializable]
    public class PickPlaceMsg : Message
    {
        public const string k_RosMessageName = "task_planner/PickPlace";
        public override string RosMessageName => k_RosMessageName;

        //  By default, the task type is PICK_AND_PLACE
        public const int PICK_AND_PLACE = 0;
        public const int PICK_ONLY = 1;
        public const int PLACE_ONLY = 2;
        public int task_type;
        //  Grasp Frame it will used
        public const int HORIZONTAL = 0;
        public const int VERTICAL = 1;
        public const int DIAGONAL = 2;
        public int grasp_frame;
        //  If execution or simulation
        public bool execute;
        //  Name of object being picked
        public string object_name;
        //  Place Position
        public Geometry.PoseMsg place_pose;

        public PickPlaceMsg()
        {
            this.task_type = 0;
            this.grasp_frame = 0;
            this.execute = false;
            this.object_name = "";
            this.place_pose = new Geometry.PoseMsg();
        }

        public PickPlaceMsg(int task_type, int grasp_frame, bool execute, string object_name, Geometry.PoseMsg place_pose)
        {
            this.task_type = task_type;
            this.grasp_frame = grasp_frame;
            this.execute = execute;
            this.object_name = object_name;
            this.place_pose = place_pose;
        }

        public static PickPlaceMsg Deserialize(MessageDeserializer deserializer) => new PickPlaceMsg(deserializer);

        private PickPlaceMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.task_type);
            deserializer.Read(out this.grasp_frame);
            deserializer.Read(out this.execute);
            deserializer.Read(out this.object_name);
            this.place_pose = Geometry.PoseMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.task_type);
            serializer.Write(this.grasp_frame);
            serializer.Write(this.execute);
            serializer.Write(this.object_name);
            serializer.Write(this.place_pose);
        }

        public override string ToString()
        {
            return "PickPlaceMsg: " +
            "\ntask_type: " + task_type.ToString() +
            "\ngrasp_frame: " + grasp_frame.ToString() +
            "\nexecute: " + execute.ToString() +
            "\nobject_name: " + object_name.ToString() +
            "\nplace_pose: " + place_pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
