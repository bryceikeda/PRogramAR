//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.MoveitTaskConstructor
{
    [Serializable]
    public class SubTrajectoryMsg : Message
    {
        public const string k_RosMessageName = "moveit_task_constructor_msgs/SubTrajectory";
        public override string RosMessageName => k_RosMessageName;

        //  generic solution information
        public SolutionInfoMsg info;
        //  trajectory
        public Moveit.RobotTrajectoryMsg trajectory;
        //  planning scene of end state as diff w.r.t. start state
        public Moveit.PlanningSceneMsg scene_diff;

        public SubTrajectoryMsg()
        {
            this.info = new SolutionInfoMsg();
            this.trajectory = new Moveit.RobotTrajectoryMsg();
            this.scene_diff = new Moveit.PlanningSceneMsg();
        }

        public SubTrajectoryMsg(SolutionInfoMsg info, Moveit.RobotTrajectoryMsg trajectory, Moveit.PlanningSceneMsg scene_diff)
        {
            this.info = info;
            this.trajectory = trajectory;
            this.scene_diff = scene_diff;
        }

        public static SubTrajectoryMsg Deserialize(MessageDeserializer deserializer) => new SubTrajectoryMsg(deserializer);

        private SubTrajectoryMsg(MessageDeserializer deserializer)
        {
            this.info = SolutionInfoMsg.Deserialize(deserializer);
            this.trajectory = Moveit.RobotTrajectoryMsg.Deserialize(deserializer);
            this.scene_diff = Moveit.PlanningSceneMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.info);
            serializer.Write(this.trajectory);
            serializer.Write(this.scene_diff);
        }

        public override string ToString()
        {
            return "SubTrajectoryMsg: " +
            "\ninfo: " + info.ToString() +
            "\ntrajectory: " + trajectory.ToString() +
            "\nscene_diff: " + scene_diff.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
