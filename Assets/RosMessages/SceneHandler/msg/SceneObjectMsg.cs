//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SceneHandler
{
    [Serializable]
    public class SceneObjectMsg : Message
    {
        public const string k_RosMessageName = "scene_handler/SceneObject";
        public override string RosMessageName => k_RosMessageName;

        //  Define box, sphere, cylinder, cone 
        //  All shapes are defined to have their bounding boxes centered around 0,0,0.
        public const byte BOX = 1;
        public const byte SPHERE = 2;
        public const byte CYLINDER = 3;
        public const byte CONE = 4;
        //  The type of the shape
        public byte type;
        public const sbyte ADD = 0;
        public const sbyte REMOVE = 1;
        public const sbyte APPEND = 2;
        public const sbyte MOVE = 3;
        //  Operation to be performed
        public sbyte operation;
        public string id;
        public Geometry.Vector3Msg dimensions;
        //  Place Position
        public Geometry.PoseMsg spawn_pose;

        public SceneObjectMsg()
        {
            this.type = 0;
            this.operation = 0;
            this.id = "";
            this.dimensions = new Geometry.Vector3Msg();
            this.spawn_pose = new Geometry.PoseMsg();
        }

        public SceneObjectMsg(byte type, sbyte operation, string id, Geometry.Vector3Msg dimensions, Geometry.PoseMsg spawn_pose)
        {
            this.type = type;
            this.operation = operation;
            this.id = id;
            this.dimensions = dimensions;
            this.spawn_pose = spawn_pose;
        }

        public static SceneObjectMsg Deserialize(MessageDeserializer deserializer) => new SceneObjectMsg(deserializer);

        private SceneObjectMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.type);
            deserializer.Read(out this.operation);
            deserializer.Read(out this.id);
            this.dimensions = Geometry.Vector3Msg.Deserialize(deserializer);
            this.spawn_pose = Geometry.PoseMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.type);
            serializer.Write(this.operation);
            serializer.Write(this.id);
            serializer.Write(this.dimensions);
            serializer.Write(this.spawn_pose);
        }

        public override string ToString()
        {
            return "SceneObjectMsg: " +
            "\ntype: " + type.ToString() +
            "\noperation: " + operation.ToString() +
            "\nid: " + id.ToString() +
            "\ndimensions: " + dimensions.ToString() +
            "\nspawn_pose: " + spawn_pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
